
// [Return to repo](https://github.com/ASNA/classic-dotnet-opnqryf)
// ### AVR for .NET program to read a file. v1.0
// ---
// 
// ---

Using System
Using System.Collections
Using System.ComponentModel
Using System.Data
Using System.Drawing
Using System.Text
Using System.Windows.Forms

BegClass formMain Extends(System.Windows.Forms.Form) Access(*Public) Partial(*Yes)

    /region Default Constructor
    
    BegConstructor Access(*Public)
        //
        // Required for Windows Form Designer support
        //
        InitializeComponent()

        //
        // TODO: Add any constructor code after InitializeComponent call
        //
    EndConstructor

    /endregion

    DclDB pgmDB DBName("*Public/DG Net Local") 

    // A file opened for read-only purposes. 
    DclDiskFile  Customer +
          Type(*Input) +
          Org(*Indexed) +
          Prefix(Customer_) +
          File("Examples/CMastNewL1") +
          DB(pgmDB) +
          ImpOpen(*No) + 
          RnmFmt(CUSTRO)

    BegSr Form1_Load Access(*Private) Event(*this.Load)
        DclSrParm sender *Object
        DclSrParm e System.EventArgs

        labelRecordsRead.Text = String.Empty 
        Connect pgmDB 
        // With OpnQryF, you can't open the file until you set the QrlSelect and QryKeyFlds
        // files. 
    EndSr

    BegSr Form1_FormClosing Access(*Private) Event(*this.FormClosing)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.Windows.Forms.FormClosingEventArgs)

        Disconnect pgmDB 
        Close *All 
    EndSr

    BegSr buttonRead_Click Access(*Private) Event(*this.buttonRead.Click)
        DclSrParm sender Type(*Object)
        DclSrParm e Type(System.EventArgs)

        Customer.QryFileName = '*Unique'
        Customer.QrySelect = textboxQSelect.Text
        Customer.QryKeyFlds = textboxQKeyFlds.Text 

        Open Customer 
        ReadFile()
        Close Customer 
    EndSr

    BegSr ResetQueryParms
        Customer.QrySelect = ""
        Customer.QryKeyFlds = "*FILE"
    EndSr

    BegSr ReadFile 
        DclFld Counter Type(*Integer) Len(4)

        Counter = 0

        listboxStates.Items.Clear()

        Read Customer
        DoWhile (NOT Customer.IsEof)
            Counter = Counter + 1
            listboxStates.Items.Add(Customer_CMCity.Trim() + ", " + Customer_CMState)
            Read Customer
        EndDo 

        labelRecordsRead.Text = 'Records read: ' + Counter.ToString("#")
    EndSr
    
EndClass
